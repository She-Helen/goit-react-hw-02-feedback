{"version":3,"sources":["components/section/Section.js","components/feedbackOptions/FeedbackOptions.js","components/statistics/Statistics.js","components/notification/Notification.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","elem","key","name","onClick","e","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","persist","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gPAEO,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,oCACE,4BAAKD,GACL,6BAAMC,ICJL,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACzC,OACE,oCACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC5B,4BAAQC,IAAKD,EAAME,KAAMF,EAAMG,QAAS,SAAAC,GAAC,OAAIR,EAAgBQ,KAC1DJ,OCLJ,SAASK,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OACE,oCACGD,EACC,oCACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,MAEA,MCXH,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OACE,oCACE,2BAAIA,ICCH,IAAMC,EAAb,4MACEC,MAAQ,CAAER,KAAM,EAAGC,QAAS,EAAGC,IAAK,GADtC,EAGEZ,gBAAkB,SAAAQ,GAChBA,EAAEW,UACF,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGb,EAAEc,OAAOhB,KAAOe,EAAUb,EAAEc,OAAOhB,MAAQ,OAN3D,EAUEiB,mBAAqB,WAEnB,OADc,EAAKL,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,KAXpE,EAeEY,gCAAkC,WAIhC,OAH2B,EAAKD,qBAC5BE,KAAKC,MAAO,EAAKR,MAAMR,KAAO,EAAKa,qBAAwB,KAC3D,GAlBR,uDAuBI,OACE,oCACE,kBAAC5B,EAAD,CAASC,MAAO,yBACd,kBAACE,EAAD,CACEC,QAAS4B,KAAKT,MACdlB,gBAAiB2B,KAAK3B,mBAG1B,kBAACL,EAAD,CAASC,MAAO,cACb+B,KAAKJ,qBACJ,kBAACd,EAAD,CACEC,KAAMiB,KAAKT,MAAMR,KACjBC,QAASgB,KAAKT,MAAMP,QACpBC,IAAKe,KAAKT,MAAMN,IAChBC,MAAOc,KAAKJ,qBACZT,mBAAoBa,KAAKH,oCAG3B,kBAACT,EAAD,CAAcC,QAAQ,4BAzClC,GAAyBY,IAAMC,W,MCD/BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.13e0ee95.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <div>{children}</div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map(elem => (\r\n        <button key={elem} name={elem} onClick={e => onLeaveFeedback(e)}>\r\n          {elem}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedback: {positivePercentage}%</p>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Section } from './section/Section';\r\nimport { FeedbackOptions } from './feedbackOptions/FeedbackOptions';\r\nimport { Statistics } from './statistics/Statistics';\r\nimport { Notification } from './notification/Notification';\r\n\r\nexport class App extends React.Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n  onLeaveFeedback = e => {\r\n    e.persist();\r\n    this.setState(prevState => {\r\n      return { [e.target.name]: prevState[e.target.name] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positivePercentage = this.countTotalFeedback()\r\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\r\n      : 0;\r\n    return positivePercentage;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={'Please leave feedback'}>\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          ></FeedbackOptions>\r\n        </Section>\r\n        <Section title={'Statistics'}>\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            ></Statistics>\r\n          ) : (\r\n            <Notification message=\"No feedback given\"></Notification>\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\nimport \"./index.module.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}